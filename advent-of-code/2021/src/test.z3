(set-option :print-success true) 
(set-option :unsat_core true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-option :proof true) ; enable proof generation

(declare-const w0 Int)
(declare-const x0 Int)
(declare-const y0 Int)
(declare-const z0 Int)
(declare-const i0 Int)
(declare-const w1 Int)
(declare-const x1 Int)
(declare-const x2 Int)
(declare-const x3 Int)
(declare-const z1 Int)
(declare-const x4 Int)
(declare-const x5 Int)
(declare-const x6 Int)
(declare-const y1 Int)
(declare-const y2 Int)
(declare-const y3 Int)
(declare-const y4 Int)
(declare-const z2 Int)
(declare-const y5 Int)
(declare-const y6 Int)
(declare-const y7 Int)
(declare-const y8 Int)
(declare-const z3 Int)
(declare-const i1 Int)
(declare-const w2 Int)
(declare-const x7 Int)
(declare-const x8 Int)
(declare-const x9 Int)
(declare-const z4 Int)
(declare-const x10 Int)
(declare-const x11 Int)
(declare-const x12 Int)
(declare-const y9 Int)
(declare-const y10 Int)
(declare-const y11 Int)
(declare-const y12 Int)
(declare-const z5 Int)
(declare-const y13 Int)
(declare-const y14 Int)
(declare-const y15 Int)
(declare-const y16 Int)
(declare-const z6 Int)
(declare-const i2 Int)
(declare-const w3 Int)
(declare-const x13 Int)
(declare-const x14 Int)
(declare-const x15 Int)
(declare-const z7 Int)
(declare-const x16 Int)
(declare-const x17 Int)
(declare-const x18 Int)
(declare-const y17 Int)
(declare-const y18 Int)
(declare-const y19 Int)
(declare-const y20 Int)
(declare-const z8 Int)
(declare-const y21 Int)
(declare-const y22 Int)
(declare-const y23 Int)
(declare-const y24 Int)
(declare-const z9 Int)
(declare-const i3 Int)
(declare-const w4 Int)
(declare-const x19 Int)
(declare-const x20 Int)
(declare-const x21 Int)
(declare-const z10 Int)
(declare-const x22 Int)
(declare-const x23 Int)
(declare-const x24 Int)
(declare-const y25 Int)
(declare-const y26 Int)
(declare-const y27 Int)
(declare-const y28 Int)
(declare-const z11 Int)
(declare-const y29 Int)
(declare-const y30 Int)
(declare-const y31 Int)
(declare-const y32 Int)
(declare-const z12 Int)
(declare-const i4 Int)
(declare-const w5 Int)
(declare-const x25 Int)
(declare-const x26 Int)
(declare-const x27 Int)
(declare-const z13 Int)
(declare-const x28 Int)
(declare-const x29 Int)
(declare-const x30 Int)
(declare-const y33 Int)
(declare-const y34 Int)
(declare-const y35 Int)
(declare-const y36 Int)
(declare-const z14 Int)
(declare-const y37 Int)
(declare-const y38 Int)
(declare-const y39 Int)
(declare-const y40 Int)
(declare-const z15 Int)
(declare-const i5 Int)
(declare-const w6 Int)
(declare-const x31 Int)
(declare-const x32 Int)
(declare-const x33 Int)
(declare-const z16 Int)
(declare-const x34 Int)
(declare-const x35 Int)
(declare-const x36 Int)
(declare-const y41 Int)
(declare-const y42 Int)
(declare-const y43 Int)
(declare-const y44 Int)
(declare-const z17 Int)
(declare-const y45 Int)
(declare-const y46 Int)
(declare-const y47 Int)
(declare-const y48 Int)
(declare-const z18 Int)
(declare-const i6 Int)
(declare-const w7 Int)
(declare-const x37 Int)
(declare-const x38 Int)
(declare-const x39 Int)
(declare-const z19 Int)
(declare-const x40 Int)
(declare-const x41 Int)
(declare-const x42 Int)
(declare-const y49 Int)
(declare-const y50 Int)
(declare-const y51 Int)
(declare-const y52 Int)
(declare-const z20 Int)
(declare-const y53 Int)
(declare-const y54 Int)
(declare-const y55 Int)
(declare-const y56 Int)
(declare-const z21 Int)
(declare-const i7 Int)
(declare-const w8 Int)
(declare-const x43 Int)
(declare-const x44 Int)
(declare-const x45 Int)
(declare-const z22 Int)
(declare-const x46 Int)
(declare-const x47 Int)
(declare-const x48 Int)
(declare-const y57 Int)
(declare-const y58 Int)
(declare-const y59 Int)
(declare-const y60 Int)
(declare-const z23 Int)
(declare-const y61 Int)
(declare-const y62 Int)
(declare-const y63 Int)
(declare-const y64 Int)
(declare-const z24 Int)
(declare-const i8 Int)
(declare-const w9 Int)
(declare-const x49 Int)
(declare-const x50 Int)
(declare-const x51 Int)
(declare-const z25 Int)
(declare-const x52 Int)
(declare-const x53 Int)
(declare-const x54 Int)
(declare-const y65 Int)
(declare-const y66 Int)
(declare-const y67 Int)
(declare-const y68 Int)
(declare-const z26 Int)
(declare-const y69 Int)
(declare-const y70 Int)
(declare-const y71 Int)
(declare-const y72 Int)
(declare-const z27 Int)
(declare-const i9 Int)
(declare-const w10 Int)
(declare-const x55 Int)
(declare-const x56 Int)
(declare-const x57 Int)
(declare-const z28 Int)
(declare-const x58 Int)
(declare-const x59 Int)
(declare-const x60 Int)
(declare-const y73 Int)
(declare-const y74 Int)
(declare-const y75 Int)
(declare-const y76 Int)
(declare-const z29 Int)
(declare-const y77 Int)
(declare-const y78 Int)
(declare-const y79 Int)
(declare-const y80 Int)
(declare-const z30 Int)
(declare-const i10 Int)
(declare-const w11 Int)
(declare-const x61 Int)
(declare-const x62 Int)
(declare-const x63 Int)
(declare-const z31 Int)
(declare-const x64 Int)
(declare-const x65 Int)
(declare-const x66 Int)
(declare-const y81 Int)
(declare-const y82 Int)
(declare-const y83 Int)
(declare-const y84 Int)
(declare-const z32 Int)
(declare-const y85 Int)
(declare-const y86 Int)
(declare-const y87 Int)
(declare-const y88 Int)
(declare-const z33 Int)
(declare-const i11 Int)
(declare-const w12 Int)
(declare-const x67 Int)
(declare-const x68 Int)
(declare-const x69 Int)
(declare-const z34 Int)
(declare-const x70 Int)
(declare-const x71 Int)
(declare-const x72 Int)
(declare-const y89 Int)
(declare-const y90 Int)
(declare-const y91 Int)
(declare-const y92 Int)
(declare-const z35 Int)
(declare-const y93 Int)
(declare-const y94 Int)
(declare-const y95 Int)
(declare-const y96 Int)
(declare-const z36 Int)
(declare-const i12 Int)
(declare-const w13 Int)
(declare-const x73 Int)
(declare-const x74 Int)
(declare-const x75 Int)
(declare-const z37 Int)
(declare-const x76 Int)
(declare-const x77 Int)
(declare-const x78 Int)
(declare-const y97 Int)
(declare-const y98 Int)
(declare-const y99 Int)
(declare-const y100 Int)
(declare-const z38 Int)
(declare-const y101 Int)
(declare-const y102 Int)
(declare-const y103 Int)
(declare-const y104 Int)
(declare-const z39 Int)
(declare-const i13 Int)
(declare-const w14 Int)
(declare-const x79 Int)
(declare-const x80 Int)
(declare-const x81 Int)
(declare-const z40 Int)
(declare-const x82 Int)
(declare-const x83 Int)
(declare-const x84 Int)
(declare-const y105 Int)
(declare-const y106 Int)
(declare-const y107 Int)
(declare-const y108 Int)
(declare-const z41 Int)
(declare-const y109 Int)
(declare-const y110 Int)
(declare-const y111 Int)
(declare-const y112 Int)
(declare-const z42 Int)
(assert (= w0 0))
(assert (= x0 0))
(assert (= y0 0))
(assert (= z0 0))
(assert (> i0 0))
(assert (< i0 10))
(assert (= w1 i0))
(assert (= x1 (* x0 0)))
(assert (= x2 (+ x1 z0)))
(assert (= x3 (rem x2 26)))
(assert (= z1 (div z0 1)))
(assert (= x4 (+ x3 15)))
(assert (= x5 (ite (= x4 w1) 1 0)))
(assert (= x6 (ite (= x5 0) 1 0)))
(assert (= y1 (* y0 0)))
(assert (= y2 (+ y1 25)))
(assert (= y3 (* y2 x6)))
(assert (= y4 (+ y3 1)))
(assert (= z2 (* z1 y4)))
(assert (= y5 (* y4 0)))
(assert (= y6 (+ y5 w1)))
(assert (= y7 (+ y6 15)))
(assert (= y8 (* y7 x6)))
(assert (= z3 (+ z2 y8)))
(assert (> i1 0))
(assert (< i1 10))
(assert (= w2 i1))
(assert (= x7 (* x6 0)))
(assert (= x8 (+ x7 z3)))
(assert (= x9 (rem x8 26)))
(assert (= z4 (div z3 1)))
(assert (= x10 (+ x9 15)))
(assert (= x11 (ite (= x10 w2) 1 0)))
(assert (= x12 (ite (= x11 0) 1 0)))
(assert (= y9 (* y8 0)))
(assert (= y10 (+ y9 25)))
(assert (= y11 (* y10 x12)))
(assert (= y12 (+ y11 1)))
(assert (= z5 (* z4 y12)))
(assert (= y13 (* y12 0)))
(assert (= y14 (+ y13 w2)))
(assert (= y15 (+ y14 10)))
(assert (= y16 (* y15 x12)))
(assert (= z6 (+ z5 y16)))
(assert (> i2 0))
(assert (< i2 10))
(assert (= w3 i2))
(assert (= x13 (* x12 0)))
(assert (= x14 (+ x13 z6)))
(assert (= x15 (rem x14 26)))
(assert (= z7 (div z6 1)))
(assert (= x16 (+ x15 12)))
(assert (= x17 (ite (= x16 w3) 1 0)))
(assert (= x18 (ite (= x17 0) 1 0)))
(assert (= y17 (* y16 0)))
(assert (= y18 (+ y17 25)))
(assert (= y19 (* y18 x18)))
(assert (= y20 (+ y19 1)))
(assert (= z8 (* z7 y20)))
(assert (= y21 (* y20 0)))
(assert (= y22 (+ y21 w3)))
(assert (= y23 (+ y22 2)))
(assert (= y24 (* y23 x18)))
(assert (= z9 (+ z8 y24)))
(assert (> i3 0))
(assert (< i3 10))
(assert (= w4 i3))
(assert (= x19 (* x18 0)))
(assert (= x20 (+ x19 z9)))
(assert (= x21 (rem x20 26)))
(assert (= z10 (div z9 1)))
(assert (= x22 (+ x21 13)))
(assert (= x23 (ite (= x22 w4) 1 0)))
(assert (= x24 (ite (= x23 0) 1 0)))
(assert (= y25 (* y24 0)))
(assert (= y26 (+ y25 25)))
(assert (= y27 (* y26 x24)))
(assert (= y28 (+ y27 1)))
(assert (= z11 (* z10 y28)))
(assert (= y29 (* y28 0)))
(assert (= y30 (+ y29 w4)))
(assert (= y31 (+ y30 16)))
(assert (= y32 (* y31 x24)))
(assert (= z12 (+ z11 y32)))
(assert (> i4 0))
(assert (< i4 10))
(assert (= w5 i4))
(assert (= x25 (* x24 0)))
(assert (= x26 (+ x25 z12)))
(assert (= x27 (rem x26 26)))
(assert (= z13 (div z12 26)))
(assert (= x28 (+ x27 (- 12))))
(assert (= x29 (ite (= x28 w5) 1 0)))
(assert (= x30 (ite (= x29 0) 1 0)))
(assert (= y33 (* y32 0)))
(assert (= y34 (+ y33 25)))
(assert (= y35 (* y34 x30)))
(assert (= y36 (+ y35 1)))
(assert (= z14 (* z13 y36)))
(assert (= y37 (* y36 0)))
(assert (= y38 (+ y37 w5)))
(assert (= y39 (+ y38 12)))
(assert (= y40 (* y39 x30)))
(assert (= z15 (+ z14 y40)))
(assert (> i5 0))
(assert (< i5 10))
(assert (= w6 i5))
(assert (= x31 (* x30 0)))
(assert (= x32 (+ x31 z15)))
(assert (= x33 (rem x32 26)))
(assert (= z16 (div z15 1)))
(assert (= x34 (+ x33 10)))
(assert (= x35 (ite (= x34 w6) 1 0)))
(assert (= x36 (ite (= x35 0) 1 0)))
(assert (= y41 (* y40 0)))
(assert (= y42 (+ y41 25)))
(assert (= y43 (* y42 x36)))
(assert (= y44 (+ y43 1)))
(assert (= z17 (* z16 y44)))
(assert (= y45 (* y44 0)))
(assert (= y46 (+ y45 w6)))
(assert (= y47 (+ y46 11)))
(assert (= y48 (* y47 x36)))
(assert (= z18 (+ z17 y48)))
(assert (> i6 0))
(assert (< i6 10))
(assert (= w7 i6))
(assert (= x37 (* x36 0)))
(assert (= x38 (+ x37 z18)))
(assert (= x39 (rem x38 26)))
(assert (= z19 (div z18 26)))
(assert (= x40 (+ x39 (- 9))))
(assert (= x41 (ite (= x40 w7) 1 0)))
(assert (= x42 (ite (= x41 0) 1 0)))
(assert (= y49 (* y48 0)))
(assert (= y50 (+ y49 25)))
(assert (= y51 (* y50 x42)))
(assert (= y52 (+ y51 1)))
(assert (= z20 (* z19 y52)))
(assert (= y53 (* y52 0)))
(assert (= y54 (+ y53 w7)))
(assert (= y55 (+ y54 5)))
(assert (= y56 (* y55 x42)))
(assert (= z21 (+ z20 y56)))
(assert (> i7 0))
(assert (< i7 10))
(assert (= w8 i7))
(assert (= x43 (* x42 0)))
(assert (= x44 (+ x43 z21)))
(assert (= x45 (rem x44 26)))
(assert (= z22 (div z21 1)))
(assert (= x46 (+ x45 14)))
(assert (= x47 (ite (= x46 w8) 1 0)))
(assert (= x48 (ite (= x47 0) 1 0)))
(assert (= y57 (* y56 0)))
(assert (= y58 (+ y57 25)))
(assert (= y59 (* y58 x48)))
(assert (= y60 (+ y59 1)))
(assert (= z23 (* z22 y60)))
(assert (= y61 (* y60 0)))
(assert (= y62 (+ y61 w8)))
(assert (= y63 (+ y62 16)))
(assert (= y64 (* y63 x48)))
(assert (= z24 (+ z23 y64)))
(assert (> i8 0))
(assert (< i8 10))
(assert (= w9 i8))
(assert (= x49 (* x48 0)))
(assert (= x50 (+ x49 z24)))
(assert (= x51 (rem x50 26)))
(assert (= z25 (div z24 1)))
(assert (= x52 (+ x51 13)))
(assert (= x53 (ite (= x52 w9) 1 0)))
(assert (= x54 (ite (= x53 0) 1 0)))
(assert (= y65 (* y64 0)))
(assert (= y66 (+ y65 25)))
(assert (= y67 (* y66 x54)))
(assert (= y68 (+ y67 1)))
(assert (= z26 (* z25 y68)))
(assert (= y69 (* y68 0)))
(assert (= y70 (+ y69 w9)))
(assert (= y71 (+ y70 6)))
(assert (= y72 (* y71 x54)))
(assert (= z27 (+ z26 y72)))
(assert (> i9 0))
(assert (< i9 10))
(assert (= w10 i9))
(assert (= x55 (* x54 0)))
(assert (= x56 (+ x55 z27)))
(assert (= x57 (rem x56 26)))
(assert (= z28 (div z27 26)))
(assert (= x58 (+ x57 (- 14))))
(assert (= x59 (ite (= x58 w10) 1 0)))
(assert (= x60 (ite (= x59 0) 1 0)))
(assert (= y73 (* y72 0)))
(assert (= y74 (+ y73 25)))
(assert (= y75 (* y74 x60)))
(assert (= y76 (+ y75 1)))
(assert (= z29 (* z28 y76)))
(assert (= y77 (* y76 0)))
(assert (= y78 (+ y77 w10)))
(assert (= y79 (+ y78 15)))
(assert (= y80 (* y79 x60)))
(assert (= z30 (+ z29 y80)))
(assert (> i10 0))
(assert (< i10 10))
(assert (= w11 i10))
(assert (= x61 (* x60 0)))
(assert (= x62 (+ x61 z30)))
(assert (= x63 (rem x62 26)))
(assert (= z31 (div z30 26)))
(assert (= x64 (+ x63 (- 11))))
(assert (= x65 (ite (= x64 w11) 1 0)))
(assert (= x66 (ite (= x65 0) 1 0)))
(assert (= y81 (* y80 0)))
(assert (= y82 (+ y81 25)))
(assert (= y83 (* y82 x66)))
(assert (= y84 (+ y83 1)))
(assert (= z32 (* z31 y84)))
(assert (= y85 (* y84 0)))
(assert (= y86 (+ y85 w11)))
(assert (= y87 (+ y86 3)))
(assert (= y88 (* y87 x66)))
(assert (= z33 (+ z32 y88)))
(assert (> i11 0))
(assert (< i11 10))
(assert (= w12 i11))
(assert (= x67 (* x66 0)))
(assert (= x68 (+ x67 z33)))
(assert (= x69 (rem x68 26)))
(assert (= z34 (div z33 26)))
(assert (= x70 (+ x69 (- 2))))
(assert (= x71 (ite (= x70 w12) 1 0)))
(assert (= x72 (ite (= x71 0) 1 0)))
(assert (= y89 (* y88 0)))
(assert (= y90 (+ y89 25)))
(assert (= y91 (* y90 x72)))
(assert (= y92 (+ y91 1)))
(assert (= z35 (* z34 y92)))
(assert (= y93 (* y92 0)))
(assert (= y94 (+ y93 w12)))
(assert (= y95 (+ y94 12)))
(assert (= y96 (* y95 x72)))
(assert (= z36 (+ z35 y96)))
(assert (> i12 0))
(assert (< i12 10))
(assert (= w13 i12))
(assert (= x73 (* x72 0)))
(assert (= x74 (+ x73 z36)))
(assert (= x75 (rem x74 26)))
(assert (= z37 (div z36 26)))
(assert (= x76 (+ x75 (- 16))))
(assert (= x77 (ite (= x76 w13) 1 0)))
(assert (= x78 (ite (= x77 0) 1 0)))
(assert (= y97 (* y96 0)))
(assert (= y98 (+ y97 25)))
(assert (= y99 (* y98 x78)))
(assert (= y100 (+ y99 1)))
(assert (= z38 (* z37 y100)))
(assert (= y101 (* y100 0)))
(assert (= y102 (+ y101 w13)))
(assert (= y103 (+ y102 10)))
(assert (= y104 (* y103 x78)))
(assert (= z39 (+ z38 y104)))
(assert (> i13 0))
(assert (< i13 10))
(assert (= w14 i13))
(assert (= x79 (* x78 0)))
(assert (= x80 (+ x79 z39)))
(assert (= x81 (rem x80 26)))
(assert (= z40 (div z39 26)))
(assert (= x82 (+ x81 (- 14))))
(assert (= x83 (ite (= x82 w14) 1 0)))
(assert (= x84 (ite (= x83 0) 1 0)))
(assert (= y105 (* y104 0)))
(assert (= y106 (+ y105 25)))
(assert (= y107 (* y106 x84)))
(assert (= y108 (+ y107 1)))
(assert (= z41 (* z40 y108)))
(assert (= y109 (* y108 0)))
(assert (= y110 (+ y109 w14)))
(assert (= y111 (+ y110 13)))
(assert (= y112 (* y111 x84)))
(assert (= z42 (+ z41 y112)))
(assert (= z42 0))
;(solve (= 0 z42))

(check-sat)
(get-model)
